/*
 * generated by Xtext
 */

package org.sourcepit.java.type.ui.contentassist.antlr;

import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.sourcepit.java.type.services.TypeGrammarAccess;

import com.google.inject.Inject;

public class TypeParser extends AbstractContentAssistParser {

   @Inject
   private TypeGrammarAccess grammarAccess;

   private Map<AbstractElement, String> nameMappings;

   @Override
   protected org.sourcepit.java.type.ui.contentassist.antlr.internal.InternalTypeParser createParser() {
      org.sourcepit.java.type.ui.contentassist.antlr.internal.InternalTypeParser result = new org.sourcepit.java.type.ui.contentassist.antlr.internal.InternalTypeParser(
         null);
      result.setGrammarAccess(grammarAccess);
      return result;
   }

   @Override
   protected String getRuleName(AbstractElement element) {
      if (nameMappings == null) {
         nameMappings = new HashMap<AbstractElement, String>() {
            private static final long serialVersionUID = 1L;
            {
               put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
               put(grammarAccess.getPrimitiveTypeAccess().getTypeNameAlternatives_1_0(),
                  "rule__PrimitiveType__TypeNameAlternatives_1_0");
               put(grammarAccess.getReferenceTypeAccess().getAlternatives(), "rule__ReferenceType__Alternatives");
               put(grammarAccess.getClassTypeAccess().getAlternatives(), "rule__ClassType__Alternatives");
               put(grammarAccess.getArrayTypeAccess().getTypeAlternatives_0_0(),
                  "rule__ArrayType__TypeAlternatives_0_0");
               put(grammarAccess.getTypeBoundAccess().getAlternatives(), "rule__TypeBound__Alternatives");
               put(grammarAccess.getTypeArgumentAccess().getAlternatives(), "rule__TypeArgument__Alternatives");
               put(grammarAccess.getWildcardBoundsAccess().getAlternatives(), "rule__WildcardBounds__Alternatives");
               put(grammarAccess.getImportDeclarationAccess().getAlternatives(),
                  "rule__ImportDeclaration__Alternatives");
               put(grammarAccess.getTypeDeclarationAccess().getAlternatives(), "rule__TypeDeclaration__Alternatives");
               put(grammarAccess.getClassDeclarationAccess().getAlternatives(), "rule__ClassDeclaration__Alternatives");
               put(grammarAccess.getClassModifierAccess().getAlternatives(), "rule__ClassModifier__Alternatives");
               put(grammarAccess.getClassBodyDeclarationAccess().getAlternatives(),
                  "rule__ClassBodyDeclaration__Alternatives");
               put(grammarAccess.getClassMemberDeclarationAccess().getAlternatives(),
                  "rule__ClassMemberDeclaration__Alternatives");
               put(grammarAccess.getFieldModifierAccess().getAlternatives(), "rule__FieldModifier__Alternatives");
               put(grammarAccess.getVariableInitializerAccess().getAlternatives(),
                  "rule__VariableInitializer__Alternatives");
               put(grammarAccess.getUnannTypeAccess().getAlternatives(), "rule__UnannType__Alternatives");
               put(grammarAccess.getUnannPrimitiveTypeAccess().getNameAlternatives_0(),
                  "rule__UnannPrimitiveType__NameAlternatives_0");
               put(grammarAccess.getUnannReferenceTypeAccess().getAlternatives(),
                  "rule__UnannReferenceType__Alternatives");
               put(grammarAccess.getUnannClassOrInterfaceTypeAccess().getAlternatives(),
                  "rule__UnannClassOrInterfaceType__Alternatives");
               put(grammarAccess.getUnannArrayTypeAccess().getAlternatives_0(), "rule__UnannArrayType__Alternatives_0");
               put(grammarAccess.getMethodModifierAccess().getAlternatives(), "rule__MethodModifier__Alternatives");
               put(grammarAccess.getMethodHeaderAccess().getAlternatives(), "rule__MethodHeader__Alternatives");
               put(grammarAccess.getResultAccess().getAlternatives(), "rule__Result__Alternatives");
               put(grammarAccess.getFormalParameterListAccess().getAlternatives(),
                  "rule__FormalParameterList__Alternatives");
               put(grammarAccess.getFormalParametersAccess().getAlternatives(), "rule__FormalParameters__Alternatives");
               put(grammarAccess.getVariableModifierAccess().getAlternatives(), "rule__VariableModifier__Alternatives");
               put(grammarAccess.getLastFormalParameterAccess().getAlternatives(),
                  "rule__LastFormalParameter__Alternatives");
               put(grammarAccess.getExceptionTypeAccess().getAlternatives(), "rule__ExceptionType__Alternatives");
               put(grammarAccess.getMethodBodyAccess().getAlternatives(), "rule__MethodBody__Alternatives");
               put(grammarAccess.getConstructorModifierAccess().getAlternatives(),
                  "rule__ConstructorModifier__Alternatives");
               put(grammarAccess.getInterfaceDeclarationAccess().getAlternatives(),
                  "rule__InterfaceDeclaration__Alternatives");
               put(grammarAccess.getInterfaceModifierAccess().getAlternatives(),
                  "rule__InterfaceModifier__Alternatives");
               put(grammarAccess.getInterfaceMemberDeclarationAccess().getAlternatives(),
                  "rule__InterfaceMemberDeclaration__Alternatives");
               put(grammarAccess.getConstantModifierAccess().getAlternatives(), "rule__ConstantModifier__Alternatives");
               put(grammarAccess.getInterfaceMethodModifierAccess().getAlternatives(),
                  "rule__InterfaceMethodModifier__Alternatives");
               put(grammarAccess.getAnnotationTypeMemberDeclarationAccess().getAlternatives(),
                  "rule__AnnotationTypeMemberDeclaration__Alternatives");
               put(grammarAccess.getAnnotationTypeElementModifierAccess().getAlternatives(),
                  "rule__AnnotationTypeElementModifier__Alternatives");
               put(grammarAccess.getAnnotationAccess().getAlternatives(), "rule__Annotation__Alternatives");
               put(grammarAccess.getElementValueAccess().getAlternatives(), "rule__ElementValue__Alternatives");
               put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
               put(grammarAccess.getIntegerLiteralAccess().getValueAlternatives_0(),
                  "rule__IntegerLiteral__ValueAlternatives_0");
               put(grammarAccess.getFloatingPointLiteralAccess().getValueAlternatives_0(),
                  "rule__FloatingPointLiteral__ValueAlternatives_0");
               put(grammarAccess.getBooleanLiteralAccess().getValueAlternatives_0(),
                  "rule__BooleanLiteral__ValueAlternatives_0");
               put(grammarAccess.getClassModifiersAccess().getAlternatives(), "rule__ClassModifiers__Alternatives");
               put(grammarAccess.getFieldModifiersAccess().getAlternatives(), "rule__FieldModifiers__Alternatives");
               put(grammarAccess.getMethodModifiersAccess().getAlternatives(), "rule__MethodModifiers__Alternatives");
               put(grammarAccess.getConstructorModifiersAccess().getAlternatives(),
                  "rule__ConstructorModifiers__Alternatives");
               put(grammarAccess.getInterfaceModifiersAccess().getAlternatives(),
                  "rule__InterfaceModifiers__Alternatives");
               put(grammarAccess.getConstantModifiersAccess().getAlternatives(),
                  "rule__ConstantModifiers__Alternatives");
               put(grammarAccess.getInterfaceMethodModifiersAccess().getAlternatives(),
                  "rule__InterfaceMethodModifiers__Alternatives");
               put(grammarAccess.getAnnotationTypeElementModifiersAccess().getAlternatives(),
                  "rule__AnnotationTypeElementModifiers__Alternatives");
               put(grammarAccess.getPrimitiveTypeAccess().getGroup(), "rule__PrimitiveType__Group__0");
               put(grammarAccess.getClassOrInterfaceTypeAccess().getGroup(), "rule__ClassOrInterfaceType__Group__0");
               put(grammarAccess.getClassOrInterfaceTypeAccess().getGroup_1(), "rule__ClassOrInterfaceType__Group_1__0");
               put(grammarAccess.getClassOrInterfaceTypeSegmentAccess().getGroup(),
                  "rule__ClassOrInterfaceTypeSegment__Group__0");
               put(grammarAccess.getClassTypeAccess().getGroup_0(), "rule__ClassType__Group_0__0");
               put(grammarAccess.getClassTypeAccess().getGroup_1(), "rule__ClassType__Group_1__0");
               put(grammarAccess.getClassType_lf_classOrInterfaceTypeAccess().getGroup(),
                  "rule__ClassType_lf_classOrInterfaceType__Group__0");
               put(grammarAccess.getClassType_lfno_classOrInterfaceTypeAccess().getGroup(),
                  "rule__ClassType_lfno_classOrInterfaceType__Group__0");
               put(grammarAccess.getTypeVariableAccess().getGroup(), "rule__TypeVariable__Group__0");
               put(grammarAccess.getArrayTypeAccess().getGroup(), "rule__ArrayType__Group__0");
               put(grammarAccess.getDimsAccess().getGroup(), "rule__Dims__Group__0");
               put(grammarAccess.getDimAccess().getGroup(), "rule__Dim__Group__0");
               put(grammarAccess.getTypeParameterAccess().getGroup(), "rule__TypeParameter__Group__0");
               put(grammarAccess.getTypeBoundAccess().getGroup_0(), "rule__TypeBound__Group_0__0");
               put(grammarAccess.getTypeBoundAccess().getGroup_1(), "rule__TypeBound__Group_1__0");
               put(grammarAccess.getAdditionalBoundAccess().getGroup(), "rule__AdditionalBound__Group__0");
               put(grammarAccess.getTypeArgumentsAccess().getGroup(), "rule__TypeArguments__Group__0");
               put(grammarAccess.getTypeArgumentListAccess().getGroup(), "rule__TypeArgumentList__Group__0");
               put(grammarAccess.getTypeArgumentListAccess().getGroup_1(), "rule__TypeArgumentList__Group_1__0");
               put(grammarAccess.getWildcardAccess().getGroup(), "rule__Wildcard__Group__0");
               put(grammarAccess.getWildcardBoundsAccess().getGroup_0(), "rule__WildcardBounds__Group_0__0");
               put(grammarAccess.getWildcardBoundsAccess().getGroup_1(), "rule__WildcardBounds__Group_1__0");
               put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
               put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
               put(grammarAccess.getCompilationUnitAccess().getGroup(), "rule__CompilationUnit__Group__0");
               put(grammarAccess.getPackageDeclarationAccess().getGroup(), "rule__PackageDeclaration__Group__0");
               put(grammarAccess.getSingleTypeImportDeclarationAccess().getGroup(),
                  "rule__SingleTypeImportDeclaration__Group__0");
               put(grammarAccess.getTypeImportOnDemandDeclarationAccess().getGroup(),
                  "rule__TypeImportOnDemandDeclaration__Group__0");
               put(grammarAccess.getSingleStaticImportDeclarationAccess().getGroup(),
                  "rule__SingleStaticImportDeclaration__Group__0");
               put(grammarAccess.getStaticImportOnDemandDeclarationAccess().getGroup(),
                  "rule__StaticImportOnDemandDeclaration__Group__0");
               put(grammarAccess.getTypeDeclarationAccess().getGroup_2(), "rule__TypeDeclaration__Group_2__0");
               put(grammarAccess.getNormalClassDeclarationAccess().getGroup(), "rule__NormalClassDeclaration__Group__0");
               put(grammarAccess.getTypeParametersAccess().getGroup(), "rule__TypeParameters__Group__0");
               put(grammarAccess.getTypeParameterListAccess().getGroup(), "rule__TypeParameterList__Group__0");
               put(grammarAccess.getTypeParameterListAccess().getGroup_1(), "rule__TypeParameterList__Group_1__0");
               put(grammarAccess.getSuperclassAccess().getGroup(), "rule__Superclass__Group__0");
               put(grammarAccess.getSuperinterfacesAccess().getGroup(), "rule__Superinterfaces__Group__0");
               put(grammarAccess.getInterfaceTypeListAccess().getGroup(), "rule__InterfaceTypeList__Group__0");
               put(grammarAccess.getInterfaceTypeListAccess().getGroup_1(), "rule__InterfaceTypeList__Group_1__0");
               put(grammarAccess.getClassBodyAccess().getGroup(), "rule__ClassBody__Group__0");
               put(grammarAccess.getClassMemberDeclarationAccess().getGroup_4(),
                  "rule__ClassMemberDeclaration__Group_4__0");
               put(grammarAccess.getFieldDeclarationAccess().getGroup(), "rule__FieldDeclaration__Group__0");
               put(grammarAccess.getVariableDeclaratorListAccess().getGroup(), "rule__VariableDeclaratorList__Group__0");
               put(grammarAccess.getVariableDeclaratorListAccess().getGroup_1(),
                  "rule__VariableDeclaratorList__Group_1__0");
               put(grammarAccess.getVariableDeclaratorAccess().getGroup(), "rule__VariableDeclarator__Group__0");
               put(grammarAccess.getVariableDeclaratorAccess().getGroup_1(), "rule__VariableDeclarator__Group_1__0");
               put(grammarAccess.getVariableDeclaratorIdAccess().getGroup(), "rule__VariableDeclaratorId__Group__0");
               put(grammarAccess.getUnannClassTypeAccess().getGroup(), "rule__UnannClassType__Group__0");
               put(grammarAccess.getUnannClassTypeAccess().getGroup_1(), "rule__UnannClassType__Group_1__0");
               put(grammarAccess.getUnannClassTypeAccess().getGroup_2(), "rule__UnannClassType__Group_2__0");
               put(grammarAccess.getClassTypeSegmentAccess().getGroup(), "rule__ClassTypeSegment__Group__0");
               put(grammarAccess.getClassTypeSegmentWithAnnotationsAccess().getGroup(),
                  "rule__ClassTypeSegmentWithAnnotations__Group__0");
               put(grammarAccess.getUnannArrayTypeAccess().getGroup(), "rule__UnannArrayType__Group__0");
               put(grammarAccess.getMethodDeclarationAccess().getGroup(), "rule__MethodDeclaration__Group__0");
               put(grammarAccess.getMethodHeaderAccess().getGroup_0(), "rule__MethodHeader__Group_0__0");
               put(grammarAccess.getMethodHeaderAccess().getGroup_1(), "rule__MethodHeader__Group_1__0");
               put(grammarAccess.getMethodDeclaratorAccess().getGroup(), "rule__MethodDeclarator__Group__0");
               put(grammarAccess.getFormalParameterListAccess().getGroup_0(), "rule__FormalParameterList__Group_0__0");
               put(grammarAccess.getFormalParametersAccess().getGroup_0(), "rule__FormalParameters__Group_0__0");
               put(grammarAccess.getFormalParametersAccess().getGroup_0_1(), "rule__FormalParameters__Group_0_1__0");
               put(grammarAccess.getFormalParametersAccess().getGroup_1(), "rule__FormalParameters__Group_1__0");
               put(grammarAccess.getFormalParametersAccess().getGroup_1_1(), "rule__FormalParameters__Group_1_1__0");
               put(grammarAccess.getFormalParameterAccess().getGroup(), "rule__FormalParameter__Group__0");
               put(grammarAccess.getLastFormalParameterAccess().getGroup_0(), "rule__LastFormalParameter__Group_0__0");
               put(grammarAccess.getReceiverParameterAccess().getGroup(), "rule__ReceiverParameter__Group__0");
               put(grammarAccess.getReceiverParameterAccess().getGroup_2(), "rule__ReceiverParameter__Group_2__0");
               put(grammarAccess.getThrows_Access().getGroup(), "rule__Throws___Group__0");
               put(grammarAccess.getExceptionTypeListAccess().getGroup(), "rule__ExceptionTypeList__Group__0");
               put(grammarAccess.getExceptionTypeListAccess().getGroup_1(), "rule__ExceptionTypeList__Group_1__0");
               put(grammarAccess.getMethodBodyAccess().getGroup_1(), "rule__MethodBody__Group_1__0");
               put(grammarAccess.getStaticInitializerAccess().getGroup(), "rule__StaticInitializer__Group__0");
               put(grammarAccess.getConstructorDeclarationAccess().getGroup(), "rule__ConstructorDeclaration__Group__0");
               put(grammarAccess.getConstructorDeclaratorAccess().getGroup(), "rule__ConstructorDeclarator__Group__0");
               put(grammarAccess.getEnumDeclarationAccess().getGroup(), "rule__EnumDeclaration__Group__0");
               put(grammarAccess.getEnumBodyAccess().getGroup(), "rule__EnumBody__Group__0");
               put(grammarAccess.getEnumConstantListAccess().getGroup(), "rule__EnumConstantList__Group__0");
               put(grammarAccess.getEnumConstantListAccess().getGroup_1(), "rule__EnumConstantList__Group_1__0");
               put(grammarAccess.getEnumConstantAccess().getGroup(), "rule__EnumConstant__Group__0");
               put(grammarAccess.getEnumConstantAccess().getGroup_2(), "rule__EnumConstant__Group_2__0");
               put(grammarAccess.getEnumBodyDeclarationsAccess().getGroup(), "rule__EnumBodyDeclarations__Group__0");
               put(grammarAccess.getNormalInterfaceDeclarationAccess().getGroup(),
                  "rule__NormalInterfaceDeclaration__Group__0");
               put(grammarAccess.getExtendsInterfacesAccess().getGroup(), "rule__ExtendsInterfaces__Group__0");
               put(grammarAccess.getInterfaceBodyAccess().getGroup(), "rule__InterfaceBody__Group__0");
               put(grammarAccess.getInterfaceMemberDeclarationAccess().getGroup_4(),
                  "rule__InterfaceMemberDeclaration__Group_4__0");
               put(grammarAccess.getConstantDeclarationAccess().getGroup(), "rule__ConstantDeclaration__Group__0");
               put(grammarAccess.getInterfaceMethodDeclarationAccess().getGroup(),
                  "rule__InterfaceMethodDeclaration__Group__0");
               put(grammarAccess.getAnnotationTypeDeclarationAccess().getGroup(),
                  "rule__AnnotationTypeDeclaration__Group__0");
               put(grammarAccess.getAnnotationTypeBodyAccess().getGroup(), "rule__AnnotationTypeBody__Group__0");
               put(grammarAccess.getAnnotationTypeMemberDeclarationAccess().getGroup_4(),
                  "rule__AnnotationTypeMemberDeclaration__Group_4__0");
               put(grammarAccess.getAnnotationTypeElementDeclarationAccess().getGroup(),
                  "rule__AnnotationTypeElementDeclaration__Group__0");
               put(grammarAccess.getDefaultValueAccess().getGroup(), "rule__DefaultValue__Group__0");
               put(grammarAccess.getNormalAnnotationAccess().getGroup(), "rule__NormalAnnotation__Group__0");
               put(grammarAccess.getElementValuePairListAccess().getGroup(), "rule__ElementValuePairList__Group__0");
               put(grammarAccess.getElementValuePairListAccess().getGroup_1(), "rule__ElementValuePairList__Group_1__0");
               put(grammarAccess.getElementValuePairAccess().getGroup(), "rule__ElementValuePair__Group__0");
               put(grammarAccess.getElementValueArrayInitializerAccess().getGroup(),
                  "rule__ElementValueArrayInitializer__Group__0");
               put(grammarAccess.getElementValueListAccess().getGroup(), "rule__ElementValueList__Group__0");
               put(grammarAccess.getElementValueListAccess().getGroup_1(), "rule__ElementValueList__Group_1__0");
               put(grammarAccess.getMarkerAnnotationAccess().getGroup(), "rule__MarkerAnnotation__Group__0");
               put(grammarAccess.getSingleElementAnnotationAccess().getGroup(),
                  "rule__SingleElementAnnotation__Group__0");
               put(grammarAccess.getArrayInitializerAccess().getGroup(), "rule__ArrayInitializer__Group__0");
               put(grammarAccess.getVariableInitializerListAccess().getGroup(),
                  "rule__VariableInitializerList__Group__0");
               put(grammarAccess.getVariableInitializerListAccess().getGroup_1(),
                  "rule__VariableInitializerList__Group_1__0");
               put(grammarAccess.getFooAccess().getGroup(), "rule__Foo__Group__0");
               put(grammarAccess.getModelAccess().getTypeAssignment(), "rule__Model__TypeAssignment");
               put(grammarAccess.getPrimitiveTypeAccess().getAnnotationsAssignment_0(),
                  "rule__PrimitiveType__AnnotationsAssignment_0");
               put(grammarAccess.getPrimitiveTypeAccess().getTypeNameAssignment_1(),
                  "rule__PrimitiveType__TypeNameAssignment_1");
               put(grammarAccess.getClassOrInterfaceTypeAccess().getClassOrInterfaceTypeSegmentsAssignment_0(),
                  "rule__ClassOrInterfaceType__ClassOrInterfaceTypeSegmentsAssignment_0");
               put(grammarAccess.getClassOrInterfaceTypeAccess().getClassOrInterfaceTypeSegmentsAssignment_1_1(),
                  "rule__ClassOrInterfaceType__ClassOrInterfaceTypeSegmentsAssignment_1_1");
               put(grammarAccess.getClassOrInterfaceTypeSegmentAccess().getAnnotationsAssignment_0(),
                  "rule__ClassOrInterfaceTypeSegment__AnnotationsAssignment_0");
               put(grammarAccess.getClassOrInterfaceTypeSegmentAccess().getNameAssignment_1(),
                  "rule__ClassOrInterfaceTypeSegment__NameAssignment_1");
               put(grammarAccess.getClassOrInterfaceTypeSegmentAccess().getTypeArgumentsAssignment_2(),
                  "rule__ClassOrInterfaceTypeSegment__TypeArgumentsAssignment_2");
               put(grammarAccess.getClassTypeAccess().getAnnotationsAssignment_0_0(),
                  "rule__ClassType__AnnotationsAssignment_0_0");
               put(grammarAccess.getClassTypeAccess().getNameAssignment_0_1(), "rule__ClassType__NameAssignment_0_1");
               put(grammarAccess.getClassTypeAccess().getTypeArgumentsAssignment_0_2(),
                  "rule__ClassType__TypeArgumentsAssignment_0_2");
               put(grammarAccess.getClassTypeAccess().getClassOrInterfaceTypeAssignment_1_0(),
                  "rule__ClassType__ClassOrInterfaceTypeAssignment_1_0");
               put(grammarAccess.getClassTypeAccess().getAnnotationsAssignment_1_2(),
                  "rule__ClassType__AnnotationsAssignment_1_2");
               put(grammarAccess.getClassTypeAccess().getNameAssignment_1_3(), "rule__ClassType__NameAssignment_1_3");
               put(grammarAccess.getClassTypeAccess().getTypeArgumentsAssignment_1_4(),
                  "rule__ClassType__TypeArgumentsAssignment_1_4");
               put(grammarAccess.getClassType_lf_classOrInterfaceTypeAccess().getAnnotationsAssignment_1(),
                  "rule__ClassType_lf_classOrInterfaceType__AnnotationsAssignment_1");
               put(grammarAccess.getClassType_lf_classOrInterfaceTypeAccess().getNameAssignment_2(),
                  "rule__ClassType_lf_classOrInterfaceType__NameAssignment_2");
               put(grammarAccess.getClassType_lf_classOrInterfaceTypeAccess().getTypeArgumentsAssignment_3(),
                  "rule__ClassType_lf_classOrInterfaceType__TypeArgumentsAssignment_3");
               put(grammarAccess.getClassType_lfno_classOrInterfaceTypeAccess().getAnnotationsAssignment_0(),
                  "rule__ClassType_lfno_classOrInterfaceType__AnnotationsAssignment_0");
               put(grammarAccess.getClassType_lfno_classOrInterfaceTypeAccess().getNameAssignment_1(),
                  "rule__ClassType_lfno_classOrInterfaceType__NameAssignment_1");
               put(grammarAccess.getClassType_lfno_classOrInterfaceTypeAccess().getTypeArgumentsAssignment_2(),
                  "rule__ClassType_lfno_classOrInterfaceType__TypeArgumentsAssignment_2");
               put(grammarAccess.getTypeVariableAccess().getAnnotationsAssignment_0(),
                  "rule__TypeVariable__AnnotationsAssignment_0");
               put(grammarAccess.getTypeVariableAccess().getNameAssignment_1(), "rule__TypeVariable__NameAssignment_1");
               put(grammarAccess.getArrayTypeAccess().getTypeAssignment_0(), "rule__ArrayType__TypeAssignment_0");
               put(grammarAccess.getArrayTypeAccess().getDimsAssignment_1(), "rule__ArrayType__DimsAssignment_1");
               put(grammarAccess.getDimsAccess().getDimsAssignment_0(), "rule__Dims__DimsAssignment_0");
               put(grammarAccess.getDimsAccess().getDimsAssignment_1(), "rule__Dims__DimsAssignment_1");
               put(grammarAccess.getDimAccess().getAnnotationsAssignment_1(), "rule__Dim__AnnotationsAssignment_1");
               put(grammarAccess.getTypeParameterAccess().getTypeParameterModifiersAssignment_0(),
                  "rule__TypeParameter__TypeParameterModifiersAssignment_0");
               put(grammarAccess.getTypeParameterAccess().getNameAssignment_1(),
                  "rule__TypeParameter__NameAssignment_1");
               put(grammarAccess.getTypeParameterAccess().getTypeBoundAssignment_2(),
                  "rule__TypeParameter__TypeBoundAssignment_2");
               put(grammarAccess.getTypeBoundAccess().getTypeVariableAssignment_0_1(),
                  "rule__TypeBound__TypeVariableAssignment_0_1");
               put(grammarAccess.getTypeBoundAccess().getClassOrInterfaceTypeAssignment_1_1(),
                  "rule__TypeBound__ClassOrInterfaceTypeAssignment_1_1");
               put(grammarAccess.getTypeBoundAccess().getAdditionalBoundAssignment_1_2(),
                  "rule__TypeBound__AdditionalBoundAssignment_1_2");
               put(grammarAccess.getTypeArgumentListAccess().getTypeArgumentsAssignment_0(),
                  "rule__TypeArgumentList__TypeArgumentsAssignment_0");
               put(grammarAccess.getTypeArgumentListAccess().getTypeArgumentsAssignment_1_1(),
                  "rule__TypeArgumentList__TypeArgumentsAssignment_1_1");
               put(grammarAccess.getWildcardAccess().getAnnotationsAssignment_1(),
                  "rule__Wildcard__AnnotationsAssignment_1");
               put(grammarAccess.getWildcardAccess().getWildcardBoundsAssignment_3(),
                  "rule__Wildcard__WildcardBoundsAssignment_3");
               put(grammarAccess.getCompilationUnitAccess().getPackageAssignment_1(),
                  "rule__CompilationUnit__PackageAssignment_1");
               put(grammarAccess.getCompilationUnitAccess().getImportsAssignment_2(),
                  "rule__CompilationUnit__ImportsAssignment_2");
               put(grammarAccess.getCompilationUnitAccess().getTypesAssignment_3(),
                  "rule__CompilationUnit__TypesAssignment_3");
               put(grammarAccess.getPackageDeclarationAccess().getModifiersAssignment_0(),
                  "rule__PackageDeclaration__ModifiersAssignment_0");
               put(grammarAccess.getPackageDeclarationAccess().getNameAssignment_2(),
                  "rule__PackageDeclaration__NameAssignment_2");
               put(grammarAccess.getSingleTypeImportDeclarationAccess().getNameAssignment_1(),
                  "rule__SingleTypeImportDeclaration__NameAssignment_1");
               put(grammarAccess.getTypeImportOnDemandDeclarationAccess().getNameAssignment_1(),
                  "rule__TypeImportOnDemandDeclaration__NameAssignment_1");
               put(grammarAccess.getSingleStaticImportDeclarationAccess().getNameAssignment_2(),
                  "rule__SingleStaticImportDeclaration__NameAssignment_2");
               put(grammarAccess.getStaticImportOnDemandDeclarationAccess().getNameAssignment_2(),
                  "rule__StaticImportOnDemandDeclaration__NameAssignment_2");
               put(grammarAccess.getNormalClassDeclarationAccess().getModifiersAssignment_0(),
                  "rule__NormalClassDeclaration__ModifiersAssignment_0");
               put(grammarAccess.getNormalClassDeclarationAccess().getNameAssignment_2(),
                  "rule__NormalClassDeclaration__NameAssignment_2");
               put(grammarAccess.getNormalClassDeclarationAccess().getTypeParametersAssignment_3(),
                  "rule__NormalClassDeclaration__TypeParametersAssignment_3");
               put(grammarAccess.getNormalClassDeclarationAccess().getSuperclassAssignment_4(),
                  "rule__NormalClassDeclaration__SuperclassAssignment_4");
               put(grammarAccess.getNormalClassDeclarationAccess().getSuperinterfacesAssignment_5(),
                  "rule__NormalClassDeclaration__SuperinterfacesAssignment_5");
               put(grammarAccess.getNormalClassDeclarationAccess().getClassBodyAssignment_6(),
                  "rule__NormalClassDeclaration__ClassBodyAssignment_6");
               put(grammarAccess.getJavaClassModifierAccess().getModifierAssignment(),
                  "rule__JavaClassModifier__ModifierAssignment");
               put(grammarAccess.getTypeParameterListAccess().getTypeParametersAssignment_0(),
                  "rule__TypeParameterList__TypeParametersAssignment_0");
               put(grammarAccess.getTypeParameterListAccess().getTypeParametersAssignment_1_1(),
                  "rule__TypeParameterList__TypeParametersAssignment_1_1");
               put(grammarAccess.getInterfaceTypeListAccess().getInterfaceTypesAssignment_0(),
                  "rule__InterfaceTypeList__InterfaceTypesAssignment_0");
               put(grammarAccess.getInterfaceTypeListAccess().getInterfaceTypesAssignment_1_1(),
                  "rule__InterfaceTypeList__InterfaceTypesAssignment_1_1");
               put(grammarAccess.getClassBodyAccess().getDeclarationsAssignment_2(),
                  "rule__ClassBody__DeclarationsAssignment_2");
               put(grammarAccess.getFieldDeclarationAccess().getFieldModifiersAssignment_0(),
                  "rule__FieldDeclaration__FieldModifiersAssignment_0");
               put(grammarAccess.getFieldDeclarationAccess().getUnannTypeAssignment_1(),
                  "rule__FieldDeclaration__UnannTypeAssignment_1");
               put(grammarAccess.getFieldDeclarationAccess().getVariableDeclaratorListAssignment_2(),
                  "rule__FieldDeclaration__VariableDeclaratorListAssignment_2");
               put(grammarAccess.getJavaFieldModifierAccess().getModifierAssignment(),
                  "rule__JavaFieldModifier__ModifierAssignment");
               put(grammarAccess.getVariableDeclaratorListAccess().getVariableDeclaratorsAssignment_0(),
                  "rule__VariableDeclaratorList__VariableDeclaratorsAssignment_0");
               put(grammarAccess.getVariableDeclaratorListAccess().getVariableDeclaratorsAssignment_1_1(),
                  "rule__VariableDeclaratorList__VariableDeclaratorsAssignment_1_1");
               put(grammarAccess.getVariableDeclaratorAccess().getIdAssignment_0(),
                  "rule__VariableDeclarator__IdAssignment_0");
               put(grammarAccess.getVariableDeclaratorAccess().getInitializerAssignment_1_1(),
                  "rule__VariableDeclarator__InitializerAssignment_1_1");
               put(grammarAccess.getVariableDeclaratorIdAccess().getIdAssignment_0(),
                  "rule__VariableDeclaratorId__IdAssignment_0");
               put(grammarAccess.getVariableDeclaratorIdAccess().getDimsAssignment_1(),
                  "rule__VariableDeclaratorId__DimsAssignment_1");
               put(grammarAccess.getUnannPrimitiveTypeAccess().getNameAssignment(),
                  "rule__UnannPrimitiveType__NameAssignment");
               put(grammarAccess.getUnannClassTypeAccess().getClassTypeSegmentAssignment_0(),
                  "rule__UnannClassType__ClassTypeSegmentAssignment_0");
               put(grammarAccess.getUnannClassTypeAccess().getClassTypeSegmentAssignment_1_1(),
                  "rule__UnannClassType__ClassTypeSegmentAssignment_1_1");
               put(grammarAccess.getUnannClassTypeAccess().getClassTypeSegmentAssignment_2_1(),
                  "rule__UnannClassType__ClassTypeSegmentAssignment_2_1");
               put(grammarAccess.getClassTypeSegmentAccess().getNameAssignment_0(),
                  "rule__ClassTypeSegment__NameAssignment_0");
               put(grammarAccess.getClassTypeSegmentAccess().getTypeArgumentsAssignment_1(),
                  "rule__ClassTypeSegment__TypeArgumentsAssignment_1");
               put(grammarAccess.getClassTypeSegmentWithAnnotationsAccess().getAnnotationsAssignment_0(),
                  "rule__ClassTypeSegmentWithAnnotations__AnnotationsAssignment_0");
               put(grammarAccess.getClassTypeSegmentWithAnnotationsAccess().getNameAssignment_1(),
                  "rule__ClassTypeSegmentWithAnnotations__NameAssignment_1");
               put(grammarAccess.getClassTypeSegmentWithAnnotationsAccess().getTypeArgumentsAssignment_2(),
                  "rule__ClassTypeSegmentWithAnnotations__TypeArgumentsAssignment_2");
               put(grammarAccess.getUnannTypeVariableAccess().getNameAssignment(),
                  "rule__UnannTypeVariable__NameAssignment");
               put(grammarAccess.getUnannArrayTypeAccess().getDimsAssignment_1(),
                  "rule__UnannArrayType__DimsAssignment_1");
               put(grammarAccess.getMethodDeclarationAccess().getMethodModifiersAssignment_0(),
                  "rule__MethodDeclaration__MethodModifiersAssignment_0");
               put(grammarAccess.getMethodDeclarationAccess().getMethodHeaderAssignment_1(),
                  "rule__MethodDeclaration__MethodHeaderAssignment_1");
               put(grammarAccess.getMethodDeclarationAccess().getMethodBodyAssignment_2(),
                  "rule__MethodDeclaration__MethodBodyAssignment_2");
               put(grammarAccess.getJavaMethodModifierAccess().getModifierAssignment(),
                  "rule__JavaMethodModifier__ModifierAssignment");
               put(grammarAccess.getMethodHeaderAccess().getResultAssignment_0_0(),
                  "rule__MethodHeader__ResultAssignment_0_0");
               put(grammarAccess.getMethodHeaderAccess().getMethodDeclaratorAssignment_0_1(),
                  "rule__MethodHeader__MethodDeclaratorAssignment_0_1");
               put(grammarAccess.getMethodHeaderAccess().getThrows_Assignment_0_2(),
                  "rule__MethodHeader__Throws_Assignment_0_2");
               put(grammarAccess.getMethodHeaderAccess().getTypeParametersAssignment_1_0(),
                  "rule__MethodHeader__TypeParametersAssignment_1_0");
               put(grammarAccess.getMethodHeaderAccess().getAnnotationsAssignment_1_1(),
                  "rule__MethodHeader__AnnotationsAssignment_1_1");
               put(grammarAccess.getMethodHeaderAccess().getResultAssignment_1_2(),
                  "rule__MethodHeader__ResultAssignment_1_2");
               put(grammarAccess.getMethodHeaderAccess().getMethodDeclaratorAssignment_1_3(),
                  "rule__MethodHeader__MethodDeclaratorAssignment_1_3");
               put(grammarAccess.getMethodHeaderAccess().getThrows_Assignment_1_4(),
                  "rule__MethodHeader__Throws_Assignment_1_4");
               put(grammarAccess.getVoidTypeAccess().getNameAssignment(), "rule__VoidType__NameAssignment");
               put(grammarAccess.getMethodDeclaratorAccess().getNameAssignment_0(),
                  "rule__MethodDeclarator__NameAssignment_0");
               put(grammarAccess.getMethodDeclaratorAccess().getParametersAssignment_2(),
                  "rule__MethodDeclarator__ParametersAssignment_2");
               put(grammarAccess.getMethodDeclaratorAccess().getDims_Assignment_4(),
                  "rule__MethodDeclarator__Dims_Assignment_4");
               put(grammarAccess.getFormalParameterListAccess().getParametersAssignment_0_0(),
                  "rule__FormalParameterList__ParametersAssignment_0_0");
               put(grammarAccess.getFormalParameterListAccess().getParametersAssignment_0_2(),
                  "rule__FormalParameterList__ParametersAssignment_0_2");
               put(grammarAccess.getFormalParameterListAccess().getParametersAssignment_1(),
                  "rule__FormalParameterList__ParametersAssignment_1");
               put(grammarAccess.getFormalParametersAccess().getParametersAssignment_0_0(),
                  "rule__FormalParameters__ParametersAssignment_0_0");
               put(grammarAccess.getFormalParametersAccess().getParametersAssignment_0_1_1(),
                  "rule__FormalParameters__ParametersAssignment_0_1_1");
               put(grammarAccess.getFormalParametersAccess().getParametersAssignment_1_0(),
                  "rule__FormalParameters__ParametersAssignment_1_0");
               put(grammarAccess.getFormalParametersAccess().getParametersAssignment_1_1_1(),
                  "rule__FormalParameters__ParametersAssignment_1_1_1");
               put(grammarAccess.getFormalParameterAccess().getModifiersAssignment_0(),
                  "rule__FormalParameter__ModifiersAssignment_0");
               put(grammarAccess.getFormalParameterAccess().getTypeAssignment_1(),
                  "rule__FormalParameter__TypeAssignment_1");
               put(grammarAccess.getFormalParameterAccess().getNameAssignment_2(),
                  "rule__FormalParameter__NameAssignment_2");
               put(grammarAccess.getJavaVariableModifierAccess().getModifierAssignment(),
                  "rule__JavaVariableModifier__ModifierAssignment");
               put(grammarAccess.getLastFormalParameterAccess().getModifiersAssignment_0_0(),
                  "rule__LastFormalParameter__ModifiersAssignment_0_0");
               put(grammarAccess.getLastFormalParameterAccess().getTypeAssignment_0_1(),
                  "rule__LastFormalParameter__TypeAssignment_0_1");
               put(grammarAccess.getLastFormalParameterAccess().getAnnotationsAssignment_0_2(),
                  "rule__LastFormalParameter__AnnotationsAssignment_0_2");
               put(grammarAccess.getLastFormalParameterAccess().getVarargsAssignment_0_3(),
                  "rule__LastFormalParameter__VarargsAssignment_0_3");
               put(grammarAccess.getLastFormalParameterAccess().getNameAssignment_0_4(),
                  "rule__LastFormalParameter__NameAssignment_0_4");
               put(grammarAccess.getReceiverParameterAccess().getAnnotationsAssignment_0(),
                  "rule__ReceiverParameter__AnnotationsAssignment_0");
               put(grammarAccess.getReceiverParameterAccess().getTypeAssignment_1(),
                  "rule__ReceiverParameter__TypeAssignment_1");
               put(grammarAccess.getReceiverParameterAccess().getQualifierAssignment_2_0(),
                  "rule__ReceiverParameter__QualifierAssignment_2_0");
               put(grammarAccess.getReceiverParameterAccess().getNameAssignment_3(),
                  "rule__ReceiverParameter__NameAssignment_3");
               put(grammarAccess.getExceptionTypeListAccess().getExceptionTypesAssignment_0(),
                  "rule__ExceptionTypeList__ExceptionTypesAssignment_0");
               put(grammarAccess.getExceptionTypeListAccess().getExceptionTypesAssignment_1_1(),
                  "rule__ExceptionTypeList__ExceptionTypesAssignment_1_1");
               put(grammarAccess.getConstructorDeclarationAccess().getConstructorModifiersAssignment_0(),
                  "rule__ConstructorDeclaration__ConstructorModifiersAssignment_0");
               put(grammarAccess.getConstructorDeclarationAccess().getConstructorDeclaratorAssignment_1(),
                  "rule__ConstructorDeclaration__ConstructorDeclaratorAssignment_1");
               put(grammarAccess.getConstructorDeclarationAccess().getThrows_Assignment_2(),
                  "rule__ConstructorDeclaration__Throws_Assignment_2");
               put(grammarAccess.getJavaConstructorModifierAccess().getModifierAssignment(),
                  "rule__JavaConstructorModifier__ModifierAssignment");
               put(grammarAccess.getConstructorDeclaratorAccess().getTypeParametersAssignment_0(),
                  "rule__ConstructorDeclarator__TypeParametersAssignment_0");
               put(grammarAccess.getConstructorDeclaratorAccess().getSimpleTypeNameAssignment_1(),
                  "rule__ConstructorDeclarator__SimpleTypeNameAssignment_1");
               put(grammarAccess.getConstructorDeclaratorAccess().getFormalParameterListAssignment_3(),
                  "rule__ConstructorDeclarator__FormalParameterListAssignment_3");
               put(grammarAccess.getEnumDeclarationAccess().getModifiersAssignment_0(),
                  "rule__EnumDeclaration__ModifiersAssignment_0");
               put(grammarAccess.getEnumDeclarationAccess().getNameAssignment_2(),
                  "rule__EnumDeclaration__NameAssignment_2");
               put(grammarAccess.getEnumDeclarationAccess().getSuperinterfacesAssignment_3(),
                  "rule__EnumDeclaration__SuperinterfacesAssignment_3");
               put(grammarAccess.getEnumDeclarationAccess().getEnumBodyAssignment_4(),
                  "rule__EnumDeclaration__EnumBodyAssignment_4");
               put(grammarAccess.getEnumBodyAccess().getEnumConstantListAssignment_2(),
                  "rule__EnumBody__EnumConstantListAssignment_2");
               put(grammarAccess.getEnumBodyAccess().getEnumBodyDeclarationsAssignment_4(),
                  "rule__EnumBody__EnumBodyDeclarationsAssignment_4");
               put(grammarAccess.getEnumConstantListAccess().getEnumConstantsAssignment_0(),
                  "rule__EnumConstantList__EnumConstantsAssignment_0");
               put(grammarAccess.getEnumConstantListAccess().getEnumConstantsAssignment_1_1(),
                  "rule__EnumConstantList__EnumConstantsAssignment_1_1");
               put(grammarAccess.getEnumConstantAccess().getEnumConstantModifiersAssignment_0(),
                  "rule__EnumConstant__EnumConstantModifiersAssignment_0");
               put(grammarAccess.getEnumConstantAccess().getNameAssignment_1(), "rule__EnumConstant__NameAssignment_1");
               put(grammarAccess.getEnumConstantAccess().getArgumentListAssignment_2_1(),
                  "rule__EnumConstant__ArgumentListAssignment_2_1");
               put(grammarAccess.getEnumConstantAccess().getClassBodyAssignment_3(),
                  "rule__EnumConstant__ClassBodyAssignment_3");
               put(grammarAccess.getEnumBodyDeclarationsAccess().getClassBodyDeclarationsAssignment_2(),
                  "rule__EnumBodyDeclarations__ClassBodyDeclarationsAssignment_2");
               put(grammarAccess.getNormalInterfaceDeclarationAccess().getInterfaceModifiersAssignment_0(),
                  "rule__NormalInterfaceDeclaration__InterfaceModifiersAssignment_0");
               put(grammarAccess.getNormalInterfaceDeclarationAccess().getNameAssignment_2(),
                  "rule__NormalInterfaceDeclaration__NameAssignment_2");
               put(grammarAccess.getNormalInterfaceDeclarationAccess().getTypeParametersAssignment_3(),
                  "rule__NormalInterfaceDeclaration__TypeParametersAssignment_3");
               put(grammarAccess.getNormalInterfaceDeclarationAccess().getExtendsInterfacesAssignment_4(),
                  "rule__NormalInterfaceDeclaration__ExtendsInterfacesAssignment_4");
               put(grammarAccess.getNormalInterfaceDeclarationAccess().getInterfaceBodyAssignment_5(),
                  "rule__NormalInterfaceDeclaration__InterfaceBodyAssignment_5");
               put(grammarAccess.getJavaInterfaceModifierAccess().getModifierAssignment(),
                  "rule__JavaInterfaceModifier__ModifierAssignment");
               put(grammarAccess.getInterfaceBodyAccess().getInterfaceMemberDeclarationsAssignment_2(),
                  "rule__InterfaceBody__InterfaceMemberDeclarationsAssignment_2");
               put(grammarAccess.getConstantDeclarationAccess().getConstantModifiersAssignment_0(),
                  "rule__ConstantDeclaration__ConstantModifiersAssignment_0");
               put(grammarAccess.getConstantDeclarationAccess().getUnannTypeAssignment_1(),
                  "rule__ConstantDeclaration__UnannTypeAssignment_1");
               put(grammarAccess.getConstantDeclarationAccess().getVariableDeclaratorListAssignment_2(),
                  "rule__ConstantDeclaration__VariableDeclaratorListAssignment_2");
               put(grammarAccess.getJavaConstantModifierAccess().getModifierAssignment(),
                  "rule__JavaConstantModifier__ModifierAssignment");
               put(grammarAccess.getInterfaceMethodDeclarationAccess().getInterfaceMethodModifiersAssignment_0(),
                  "rule__InterfaceMethodDeclaration__InterfaceMethodModifiersAssignment_0");
               put(grammarAccess.getInterfaceMethodDeclarationAccess().getMethodHeaderAssignment_1(),
                  "rule__InterfaceMethodDeclaration__MethodHeaderAssignment_1");
               put(grammarAccess.getInterfaceMethodDeclarationAccess().getMethodBodyAssignment_2(),
                  "rule__InterfaceMethodDeclaration__MethodBodyAssignment_2");
               put(grammarAccess.getJavaInterfaceMethodModifiersAccess().getModifiersAssignment(),
                  "rule__JavaInterfaceMethodModifiers__ModifiersAssignment");
               put(grammarAccess.getAnnotationTypeDeclarationAccess().getInterfaceModifiersAssignment_0(),
                  "rule__AnnotationTypeDeclaration__InterfaceModifiersAssignment_0");
               put(grammarAccess.getAnnotationTypeDeclarationAccess().getNameAssignment_3(),
                  "rule__AnnotationTypeDeclaration__NameAssignment_3");
               put(grammarAccess.getAnnotationTypeDeclarationAccess().getAnnotationTypeBodyAssignment_4(),
                  "rule__AnnotationTypeDeclaration__AnnotationTypeBodyAssignment_4");
               put(grammarAccess.getAnnotationTypeBodyAccess().getAnnotationTypeMemberDeclarationsAssignment_2(),
                  "rule__AnnotationTypeBody__AnnotationTypeMemberDeclarationsAssignment_2");
               put(grammarAccess.getAnnotationTypeElementDeclarationAccess()
                  .getAnnotationTypeElementModifiersAssignment_0(),
                  "rule__AnnotationTypeElementDeclaration__AnnotationTypeElementModifiersAssignment_0");
               put(grammarAccess.getAnnotationTypeElementDeclarationAccess().getUnannTypeAssignment_1(),
                  "rule__AnnotationTypeElementDeclaration__UnannTypeAssignment_1");
               put(grammarAccess.getAnnotationTypeElementDeclarationAccess().getNameAssignment_2(),
                  "rule__AnnotationTypeElementDeclaration__NameAssignment_2");
               put(grammarAccess.getAnnotationTypeElementDeclarationAccess().getDimsAssignment_5(),
                  "rule__AnnotationTypeElementDeclaration__DimsAssignment_5");
               put(grammarAccess.getAnnotationTypeElementDeclarationAccess().getDefaultValueAssignment_6(),
                  "rule__AnnotationTypeElementDeclaration__DefaultValueAssignment_6");
               put(grammarAccess.getJavaAnnotationTypeElementModifiersAccess().getModifierAssignment(),
                  "rule__JavaAnnotationTypeElementModifiers__ModifierAssignment");
               put(grammarAccess.getNormalAnnotationAccess().getTypeNameAssignment_1(),
                  "rule__NormalAnnotation__TypeNameAssignment_1");
               put(grammarAccess.getNormalAnnotationAccess().getElementValuePairListAssignment_3(),
                  "rule__NormalAnnotation__ElementValuePairListAssignment_3");
               put(grammarAccess.getElementValuePairListAccess().getElementValuePairsAssignment_0(),
                  "rule__ElementValuePairList__ElementValuePairsAssignment_0");
               put(grammarAccess.getElementValuePairListAccess().getElementValuePairsAssignment_1_1(),
                  "rule__ElementValuePairList__ElementValuePairsAssignment_1_1");
               put(grammarAccess.getElementValuePairAccess().getNameAssignment_0(),
                  "rule__ElementValuePair__NameAssignment_0");
               put(grammarAccess.getElementValuePairAccess().getElementValueAssignment_2(),
                  "rule__ElementValuePair__ElementValueAssignment_2");
               put(grammarAccess.getElementValueArrayInitializerAccess().getElementValueListAssignment_2(),
                  "rule__ElementValueArrayInitializer__ElementValueListAssignment_2");
               put(grammarAccess.getElementValueListAccess().getElementValuesAssignment_0(),
                  "rule__ElementValueList__ElementValuesAssignment_0");
               put(grammarAccess.getElementValueListAccess().getElementValuesAssignment_1_1(),
                  "rule__ElementValueList__ElementValuesAssignment_1_1");
               put(grammarAccess.getMarkerAnnotationAccess().getTypeNameAssignment_1(),
                  "rule__MarkerAnnotation__TypeNameAssignment_1");
               put(grammarAccess.getSingleElementAnnotationAccess().getTypeNameAssignment_1(),
                  "rule__SingleElementAnnotation__TypeNameAssignment_1");
               put(grammarAccess.getSingleElementAnnotationAccess().getElementValueAssignment_3(),
                  "rule__SingleElementAnnotation__ElementValueAssignment_3");
               put(grammarAccess.getArrayInitializerAccess().getVariableInitializerListAssignment_2(),
                  "rule__ArrayInitializer__VariableInitializerListAssignment_2");
               put(grammarAccess.getVariableInitializerListAccess().getVariableInitializerAssignment_0(),
                  "rule__VariableInitializerList__VariableInitializerAssignment_0");
               put(grammarAccess.getVariableInitializerListAccess().getVariableInitializerAssignment_1_1(),
                  "rule__VariableInitializerList__VariableInitializerAssignment_1_1");
               put(grammarAccess.getBlockAccess().getDummyAssignment(), "rule__Block__DummyAssignment");
               put(grammarAccess.getBlockStatementsAccess().getDummyAssignment(),
                  "rule__BlockStatements__DummyAssignment");
               put(grammarAccess.getArgumentListAccess().getDummyAssignment(), "rule__ArgumentList__DummyAssignment");
               put(grammarAccess.getPrimaryAccess().getDummyAssignment(), "rule__Primary__DummyAssignment");
               put(grammarAccess.getExpressionAccess().getDummyAssignment(), "rule__Expression__DummyAssignment");
               put(grammarAccess.getConditionalExpressionAccess().getDummyAssignment(),
                  "rule__ConditionalExpression__DummyAssignment");
               put(grammarAccess.getIntegerLiteralAccess().getValueAssignment(),
                  "rule__IntegerLiteral__ValueAssignment");
               put(grammarAccess.getFloatingPointLiteralAccess().getValueAssignment(),
                  "rule__FloatingPointLiteral__ValueAssignment");
               put(grammarAccess.getBooleanLiteralAccess().getValueAssignment(),
                  "rule__BooleanLiteral__ValueAssignment");
               put(grammarAccess.getCharacterLiteralAccess().getValueAssignment(),
                  "rule__CharacterLiteral__ValueAssignment");
               put(grammarAccess.getStringLiteralAccess().getValueAssignment(), "rule__StringLiteral__ValueAssignment");
               put(grammarAccess.getNullLiteralAccess().getValueAssignment(), "rule__NullLiteral__ValueAssignment");
            }
         };
      }
      return nameMappings.get(element);
   }

   @Override
   protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
      try {
         org.sourcepit.java.type.ui.contentassist.antlr.internal.InternalTypeParser typedParser = (org.sourcepit.java.type.ui.contentassist.antlr.internal.InternalTypeParser) parser;
         typedParser.entryRuleModel();
         return typedParser.getFollowElements();
      }
      catch (RecognitionException ex) {
         throw new RuntimeException(ex);
      }
   }

   @Override
   protected String[] getInitialHiddenTokens() {
      return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
   }

   public TypeGrammarAccess getGrammarAccess() {
      return this.grammarAccess;
   }

   public void setGrammarAccess(TypeGrammarAccess grammarAccess) {
      this.grammarAccess = grammarAccess;
   }
}
